<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <style>
        /* Sidebar */
        .sidebar {
            height: 100vh;
            width: 220px;
            position: fixed;
            background-color: #2c3e50;
            padding-top: 20px;
            color: #fff;
        }

        .sidebar a {
            display: block;
            color: #ecf0f1;
            padding: 12px 20px;
            text-decoration: none;
        }

        .sidebar a:hover {
            background-color: #34495e;
        }

        /* Main content */
        .main-content {
            margin-left: 230px;
            padding: 20px;
        }

        /* Modal */
        .modal {
            display: none;
            /* ·∫®n modal m·∫∑c ƒë·ªãnh */
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
            /* ƒê·ªô m·ªù n·ªÅn */
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
        }

        /* Close button */
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .container {
            display: flex;
            flex-wrap: wrap;
            /* ƒê·ªÉ c√°c box xu·ªëng d√≤ng khi h·∫øt ch·ªó */
            gap: 20px;
            /* Kho·∫£ng c√°ch gi·ªØa c√°c box */
        }

        .product-card {
            height: 300px;
            /* Chi·ªÅu cao c·ªë ƒë·ªãnh */
            border: 1px solid #ccc;
            border-radius: 6px;
            padding: 15px;
            background-color: #f9f9f9;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            margin-top: 20px;
        }

        .comments-container div {
            display: flex;
            /* ƒê·∫∑t flex layout cho c√°c b√¨nh lu·∫≠n */
            flex-direction: column;
            /* S·∫Øp x·∫øp c√°c ph·∫ßn t·ª≠ theo chi·ªÅu d·ªçc */
        }

        .comments-container .btn {
            align-self: flex-end;
            /* ƒê·∫©y n√∫t v·ªÅ cu·ªëi c√πng */
            margin-top: 10px;
            /* Kho·∫£ng c√°ch tr√™n gi·ªØa b√¨nh lu·∫≠n v√† n√∫t */
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .table th,
        .table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .table th {
            background-color: #f2f2f2;
            font-weight: bold;
        }

        .table-striped tr:nth-child(even) {
            background-color: #f9f9f9;
        }
    </style>
</head>

<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <h3 class="text-center">Admin Panel</h3>
        <a href="#" onclick="toggleProductManagement()">üì¶ Qu·∫£n l√Ω s·∫£n ph·∫©m</a>
        <a href="#" id="openAddModal">‚ûï Th√™m s·∫£n ph·∫©m</a>
        <a href="#" onclick="toggleUserManagement()">üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng</a>
        <a href="#" onclick="toggleOrderManagement()">üìù Qu·∫£n l√Ω ƒë∆°n h√†ng</a>
        <a href="/auth/logout">üö™ ƒêƒÉng xu·∫•t</a>
    </div>

    <div id="product-management">
        <!-- Main Content -->
        <div class="main-content">
            <h1>Dashboard - Qu·∫£n l√Ω s·∫£n ph·∫©m</h1>
            <!-- Search bar -->
            <form method="GET" action="/admin/dashboard" class="search-bar form-inline">
                <input type="text" name="search" placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m" value="<%= search %>"
                    class="form-control">
                <button type="submit" class="btn btn-info">üîç T√¨m ki·∫øm</button>
            </form>

            <!-- Product list -->
            <div class="row">
                <% if (products.length===0) { %>
                    <p>Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o.</p>
                    <% } else { %>
                        <% products.forEach(product=> { %>
                            <div class="col-sm-6 col-md-4">
                                <div class="product-card">
                                    <h3>
                                        <%= product.name %>
                                    </h3>
                                    <p><strong>M√¥ t·∫£:</strong>
                                        <%= product.description %>
                                    </p>
                                    <p><strong>Gi√°:</strong>
                                        <%= (product.price).toLocaleString('vi-VN') %> ‚Ç´
                                    </p>
                                    <% if (product.saleprice) { %> <!-- Ki·ªÉm tra n·∫øu c√≥ saleprice -->
                                        <p><strong>Gi√° khuy·∫øn m√£i:</strong>
                                            <%= (product.saleprice).toLocaleString('vi-VN') %> ‚Ç´
                                        </p>
                                    <% } %>
                                    <div class="actions">
                                        <button class="btn btn-primary btn-sm editButton"
                                            data-product-id="<%= product._id %>">‚úèÔ∏è C·∫≠p nh·∫≠t</button>
                                        <a href="/admin/products/delete/<%= product._id %>"
                                            class="btn btn-danger btn-sm"
                                            onclick="return confirm('B·∫°n c√≥ ch·∫Øc mu·ªën xo√° s·∫£n ph·∫©m n√†y?');">üóëÔ∏è Xo√°</a>
                                        <button class="btn btn-primary btn-sm"
                                            onclick="openComments('<%= product._id %>')">üó®Ô∏è B√¨nh lu·∫≠n</button>
                                    </div>
                                </div>
                            </div>
                            <% }) %>
                                <% } %>
            </div>
        </div>

        <!-- Modal: Th√™m s·∫£n ph·∫©m -->
        <div id="addModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h2>Th√™m s·∫£n ph·∫©m m·ªõi</h2>
                <form id="addForm" action="/admin/products/new" method="POST">
                    <div class="form-group">
                        <label for="addName">T√™n s·∫£n ph·∫©m:</label>
                        <input type="text" class="form-control" name="name" id="addName" required>
                    </div>
                    <div class="form-group">
                        <label for="addDescription">M√¥ t·∫£:</label>
                        <textarea class="form-control" name="description" id="addDescription" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="addPrice">Gi√°:</label>
                        <input type="number" class="form-control" name="price" id="addPrice" required>
                    </div>
                    <div class="form-group">
                        <label for="addImage">H√¨nh ·∫£nh:</label>
                        <input type="text" class="form-control" name="image" id="addImage" required>
                    </div>
                    <div class="form-group">
                        <label for="addCategory">Danh m·ª•c:</label>
                        <select class="form-control" id="addCategory" name="category" required>
                            <option value="√Åo">√Åo</option>
                            <option value="Qu·∫ßn">Qu·∫ßn</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="addSale">Khuy·∫øn m√£i:</label>
                        <input type="text" class="form-control" name="saleprice" id="addSale">
                    </div>
                    <button type="submit" class="btn btn-primary">Th√™m s·∫£n ph·∫©m</button>
                </form>
            </div>
        </div>

        <!-- Modal: C·∫≠p nh·∫≠t s·∫£n ph·∫©m -->
        <div id="editModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h2>S·ª≠a s·∫£n ph·∫©m</h2>
                <form id="editForm" action="/admin/products/edit/" method="POST">
                    <div class="form-group">
                        <label for="editName">T√™n s·∫£n ph·∫©m:</label>
                        <input type="text" class="form-control" name="name" id="editName" required>
                    </div>
                    <div class="form-group">
                        <label for="editDescription">M√¥ t·∫£:</label>
                        <textarea class="form-control" name="description" id="editDescription" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="editPrice">Gi√°:</label>
                        <input type="number" class="form-control" name="price" id="editPrice" required>
                    </div>
                    <div class="form-group">
                        <label for="editImage">H√¨nh ·∫£nh:</label>
                        <input type="text" class="form-control" name="image" id="editImage" required>
                    </div>
                    <div class="form-group">
                        <label for="editCategory">Danh m·ª•c:</label>
                        <select class="form-control" id="editCategory" name="category" required>
                            <option value="√Åo">√Åo</option>
                            <option value="Qu·∫ßn">Qu·∫ßn</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editSale">Khuy·∫øn m√£i:</label>
                        <input type="text" class="form-control" name="saleprice" id="editSale">
                    </div>
                    <button type="submit" class="btn btn-primary">C·∫≠p nh·∫≠t s·∫£n ph·∫©m</button>
                </form>
            </div>
        </div>

        <!-- Modal: S·ª≠a Comment -->
        <div class="modal" id="commentModal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">B√¨nh lu·∫≠n s·∫£n ph·∫©m</h5>
                        <button type="button" class="close" onclick="closeComments()">&times;</button>
                    </div>
                    <div class="modal-body" id="commentsContainer">
                        <!-- Comment list will be loaded here via JS -->
                        <div class="text-center">ƒêang t·∫£i b√¨nh lu·∫≠n...</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Danh s√°ch ng∆∞·ªùi d√πng -->
    <div class="main-content">
        <div id="user-management" style="display: none;">
            <h4>Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h4>
            <button onclick="openAddModal()" class="btn btn-primary">Th√™m ng∆∞·ªùi d√πng</button>
            <table class="table table-striped" id="user-table">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>H√†nh ƒë·ªông</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Danh s√°ch ng∆∞·ªùi d√πng s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y -->
                </tbody>
            </table>
        </div>

        <!-- Modal: S·ª≠a ng∆∞·ªùi d√πng -->
        <div id="editUserModal" class="modal" style="display: none;">
            <div class="modal-content">
                <span class="close" onclick="closeEditModal()">&times;</span>
                <h4>Ch·ªânh s·ª≠a ng∆∞·ªùi d√πng</h4>
                <form id="editUserForm">
                    <label for="editUsername">Username:</label>
                    <input type="text" class="form-control" id="editUsername" name="username" required><br><br>

                    <label for="editEmail">Email:</label>
                    <input type="email" class="form-control" id="editEmail" name="email" required><br><br>

                    <label for="editRole">Vai tr√≤:</label>
                    <select class="form-control" id="editRole" name="role">
                        <option value="user">User</option>
                        <option value="admin">Admin</option>
                    </select><br><br>

                    <button type="button" class="btn btn-primary" onclick="saveEditedUser()">L∆∞u</button>
                </form>
            </div>
        </div>

        <!-- Modal: Th√™m ng∆∞·ªùi d√πng -->
        <div id="addUserModal" class="modal" style="display: none;">
            <div class="modal-content">
                <span class="close" onclick="closeAddModal()">&times;</span>
                <h4>Th√™m ng∆∞·ªùi d√πng m·ªõi</h4>
                <form id="addUserForm">
                    <label for="addUsername">Username:</label>
                    <input type="text" class="form-control" id="addUsername" name="username" required><br><br>

                    <label for="addEmail">Email:</label>
                    <input type="email" class="form-control" id="addEmail" name="email" required><br><br>

                    <label for="addPassword">Password:</label>
                    <input type="password" class="form-control" id="addPassword" name="password" required><br><br>

                    <label for="addRole">Vai tr√≤:</label>
                    <select class="form-control" id="addRole" name="role">
                        <option value="user">User</option>
                        <option value="admin">Admin</option>
                    </select><br><br>

                    <button type="button" class="btn btn-primary" onclick="saveNewUser()">Th√™m</button>
                </form>
            </div>
        </div>


    </div>

    <!-- Danh s√°ch ƒë∆°n h√†ng -->
    <div class="main-content">
        <div id="order-management" style="display: none;">
            <h4>Qu·∫£n l√Ω ƒë∆°n h√†ng</h4>
            <table class="table table-striped" id="order-table">
                <thead>
                    <tr>
                        <th>M√£ ƒê∆°n H√†ng</th>
                        <th>Kh√°ch H√†ng</th>
                        <th>Email</th>
                        <th>T·ªïng Ti·ªÅn</th>
                        <th>Tr·∫°ng Th√°i</th>
                        <th>H√†nh ƒë·ªông</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Danh s√°ch ƒë∆°n h√†ng s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y -->
                </tbody>
            </table>
        </div>

        <!-- Modal: S·ª≠a ƒë∆°n h√†ng -->
        <div id="editOrderModal" class="modal" style="display: none;">
            <div class="modal-content">
                <span class="close" onclick="closeEditOrderModal()">&times;</span>
                <h4>Ch·ªânh s·ª≠a ƒë∆°n h√†ng</h4>
                <form id="editOrderForm">
                    <label for="editCustomerName">Kh√°ch H√†ng:</label>
                    <input type="text" class="form-control" id="editCustomerName" name="customerName" required><br><br>

                    <label for="editTotalAmount">T·ªïng Ti·ªÅn:</label>
                    <input type="number" class="form-control" id="editTotalAmount" name="totalAmount" required><br><br>

                    <label for="editOrderStatus">Tr·∫°ng Th√°i:</label>
                    <select class="form-control" id="editOrderStatus" name="status">
                        <option value="pending">Ch·ªù x·ª≠ l√Ω</option>
                        <option value="shipped">ƒê√£ giao</option>
                        <option value="cancelled">ƒê√£ h·ªßy</option>
                    </select><br><br>

                    <button type="button" class="btn btn-primary" onclick="saveEditedOrder()">L∆∞u</button>
                </form>
            </div>
        </div>
    </div>


    <!-- JavaScript -->
    <script>
        // L·∫•y c√°c ph·∫ßn t·ª≠ modal c·∫ßn thi·∫øt
        const addModal = document.getElementById("addModal");
        const editModal = document.getElementById("editModal");
        const commentModal = document.getElementById("commentModal");
        const closeButtons = document.querySelectorAll(".close");
        const list = document.getElementById('user-list');

        // M·ªü Modal Th√™m S·∫£n Ph·∫©m
        document.getElementById("openAddModal").onclick = function () {
            addModal.style.display = "block";
        };

        // M·ªü Modal S·ª≠a S·∫£n Ph·∫©m
        document.querySelectorAll(".editButton").forEach(button => {
            button.onclick = function () {
                const productId = this.dataset.productId;

                // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin s·∫£n ph·∫©m
                fetch(`/admin/products/edit/${productId}`, { method: 'GET' })
                    .then(response => {
                        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m.");
                        return response.json();
                    })
                    .then(product => {
                        // ƒêi·ªÅn d·ªØ li·ªáu v√†o form s·ª≠a
                        document.getElementById("editName").value = product.name;
                        document.getElementById("editDescription").value = product.description;
                        document.getElementById("editPrice").value = product.price;
                        document.getElementById("editImage").value = product.image;
                        document.getElementById("editCategory").value = product.category;
                        document.getElementById("editSale").value = product.saleprice;

                        // C·∫≠p nh·∫≠t action form
                        document.getElementById("editForm").action = `/admin/products/edit/${productId}`;
                        editModal.style.display = "block"; // Hi·ªÉn th·ªã modal
                    })
                    .catch(err => {
                        console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", err);
                        alert("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.");
                    });
            };
        });

        // M·ªü Modal B√¨nh Lu·∫≠n
        function openComments(productId) {
            const commentsContainer = document.getElementById('commentsContainer');
            commentModal.style.display = 'block';
            commentsContainer.innerHTML = '<p>ƒêang t·∫£i b√¨nh lu·∫≠n...</p>'; // Hi·ªÉn th·ªã tr·∫°ng th√°i ƒëang t·∫£i

            // G·ªçi API ƒë·ªÉ t·∫£i b√¨nh lu·∫≠n
            fetch(`/admin/${productId}/comments`)
                .then(response => {
                    if (!response.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i b√¨nh lu·∫≠n.");
                    return response.json();
                })
                .then(comments => {
                    commentsContainer.innerHTML = ''; // X√≥a n·ªôi dung c≈©

                    if (comments.length === 0) {
                        commentsContainer.innerHTML = '<p>Ch∆∞a c√≥ b√¨nh lu·∫≠n n√†o.</p>';
                        return;
                    }

                    comments.forEach(comment => {
                        const div = document.createElement('div');
                        div.classList.add('mb-3', 'p-2', 'border', 'rounded', 'd-flex', 'flex-column'); // S·ª≠ d·ª•ng Flexbox

                        div.innerHTML = `
                        <div>
                            <strong>${comment.userName}</strong> (${comment.rating}‚≠ê): ${comment.comment}
                        </div>
                            <button onclick="deleteComment('${productId}', '${comment._id}')" class="btn btn-sm btn-danger mt-3 align-self-end">Xo√°</button>
                        `;

                        commentsContainer.appendChild(div);
                    });

                })
                .catch(err => {
                    console.error("L·ªói khi t·∫£i b√¨nh lu·∫≠n:", err);
                    commentsContainer.innerHTML = '<p>L·ªói khi t·∫£i b√¨nh lu·∫≠n.</p>';
                });
        }

        // ƒê√≥ng Modal B√¨nh Lu·∫≠n
        function closeComments() {
            commentModal.style.display = "none";
        }

        // X√≥a B√¨nh Lu·∫≠n
        function deleteComment(productId, commentId) {
            if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° b√¨nh lu·∫≠n n√†y?")) {
                fetch(`/admin/${productId}/comments/${commentId}`, { method: 'DELETE' })
                    .then(response => {
                        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ xo√° b√¨nh lu·∫≠n.");
                        return response.json();
                    })
                    .then(() => openComments(productId)) // T·∫£i l·∫°i danh s√°ch b√¨nh lu·∫≠n
                    .catch(err => {
                        console.error("L·ªói khi xo√° b√¨nh lu·∫≠n:", err);
                        alert("Kh√¥ng th·ªÉ xo√° b√¨nh lu·∫≠n. Vui l√≤ng th·ª≠ l·∫°i.");
                    });
            }
        }

        function toggleProductManagement() {
            document.getElementById('product-management').style.display = 'block';
            document.getElementById('user-management').style.display = 'none';
            document.getElementById('order-management').style.display = 'none';
        }

        function toggleUserManagement() {
            document.getElementById('product-management').style.display = 'none';
            document.getElementById('user-management').style.display = 'block';
            document.getElementById('order-management').style.display = 'none';
            loadUsers();

            function loadUsers() {
                const userTableBody = document.querySelector("#user-table tbody");

                fetch('/admin/users')
                    .then(res => {
                        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i danh s√°ch ng∆∞·ªùi d√πng.");
                        return res.json();
                    })
                    .then(users => {
                        userTableBody.innerHTML = ''; // X√≥a n·ªôi dung c≈©

                        if (users.length === 0) {
                            userTableBody.innerHTML = '<tr><td colspan="3">Kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o.</td></tr>';
                            return;
                        }


                        users.forEach(user => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                    <td>${user.username}</td>
                    <td>${user.email}</td>
                    <td>${user.role}</td>
                    <td>
                        <button class="btn btn-sm btn-warning" onclick="editUser('${user._id}')">S·ª≠a</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteUser('${user._id}')">X√≥a</button>
                    </td>
                `;
                            userTableBody.appendChild(row);
                        });
                    })
                    .catch(err => console.error('L·ªói khi t·∫£i danh s√°ch ng∆∞·ªùi d√πng:', err));
            }
        }

        // M·ªü modal th√™m ng∆∞·ªùi d√πng
        function openAddModal() {
            const modal = document.getElementById("addUserModal");
            modal.style.display = "block";
        }

        //L∆∞u ng∆∞·ªùi d√πng m·ªõi
        function saveNewUser() {
            const username = document.getElementById("addUsername").value;
            const email = document.getElementById("addEmail").value;
            const password = document.getElementById("addPassword").value;
            const role = document.getElementById("addRole").value;

            // G·ª≠i d·ªØ li·ªáu l√™n server
            fetch('/admin/users', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, email, password, role })
            })
                .then(res => {
                    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ th√™m ng∆∞·ªùi d√πng.");
                    return res.json();
                })
                .then(() => {
                    alert("Ng∆∞·ªùi d√πng m·ªõi ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng.");
                    closeAddModal();
                    loadUsers(); // L√†m m·ªõi danh s√°ch ng∆∞·ªùi d√πng
                })
                .catch(err => console.error("L·ªói khi th√™m ng∆∞·ªùi d√πng:", err));
        }



        // S·ª≠a ng∆∞·ªùi d√πng
        function editUser(userId) {
            // Hi·ªÉn th·ªã modal
            const modal = document.getElementById("editUserModal");
            modal.style.display = "block";

            // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin ng∆∞·ªùi d√πng c·∫ßn s·ª≠a
            fetch(`/admin/users/${userId}`)
                .then(res => {
                    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ l·∫•y th√¥ng tin ng∆∞·ªùi d√πng.");
                    return res.json();
                })
                .then(user => {
                    // ƒêi·ªÅn d·ªØ li·ªáu ng∆∞·ªùi d√πng v√†o modal
                    document.getElementById("editUsername").value = user.username;
                    document.getElementById("editEmail").value = user.email;
                    document.getElementById("editRole").value = user.role;

                    // L∆∞u userId v√†o modal ƒë·ªÉ g·ª≠i khi s·ª≠a
                    document.getElementById("editUserForm").dataset.userId = userId;
                })
                .catch(err => console.error("L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", err));
        }

        // L∆∞u th√¥ng tin ng∆∞·ªùi d√πng ƒë√£ ch·ªânh s·ª≠a
        function saveEditedUser() {
            const form = document.getElementById("editUserForm");
            const userId = form.dataset.userId;

            const updatedUser = {
                username: document.getElementById("editUsername").value,
                email: document.getElementById("editEmail").value,
                role: document.getElementById("editRole").value
            };

            // G·ª≠i th√¥ng tin ƒë√£ ch·ªânh s·ª≠a l√™n server
            fetch(`/admin/users/${userId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(updatedUser)
            })
                .then(res => {
                    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng.");
                    return res.json();
                })
                .then(() => {
                    alert("Th√¥ng tin ng∆∞·ªùi d√πng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.");
                    closeEditModal();
                    loadUsers(); // L√†m m·ªõi danh s√°ch ng∆∞·ªùi d√πng
                })
                .catch(err => console.error("L·ªói khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng:", err));
        }

        // X√≥a ng∆∞·ªùi d√πng
        function deleteUser(userId) {
            if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y kh√¥ng?')) return;

            fetch(`/admin/users/${userId}`, { method: 'DELETE' })
                .then(res => {
                    if (!res.ok) throw new Error('L·ªói khi x√≥a ng∆∞·ªùi d√πng.');
                    return res.json();
                })
                .then(() => {
                    alert('Ng∆∞·ªùi d√πng ƒë√£ ƒë∆∞·ª£c x√≥a.');
                    loadUsers(); // C·∫≠p nh·∫≠t l·∫°i danh s√°ch
                })
                .catch(err => console.error(err));
        }


        function toggleOrderManagement() {
            document.getElementById('product-management').style.display = 'none';
            document.getElementById('user-management').style.display = 'none';
            document.getElementById('order-management').style.display = 'block';
            loadOrders();

            // H√†m t·∫£i danh s√°ch ƒë∆°n h√†ng
            function loadOrders() {
                const orderTableBody = document.querySelector("#order-table tbody");

                fetch('/admin/orders')
                    .then(res => {
                        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i danh s√°ch ƒë∆°n h√†ng.");
                        return res.json();
                    })
                    .then(orders => {
                        orderTableBody.innerHTML = ''; // X√≥a n·ªôi dung c≈©

                        if (orders.length === 0) {
                            orderTableBody.innerHTML = '<tr><td colspan="9">Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</td></tr>';
                            return;
                        }

                        orders.forEach(order => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                        <td>${order._id}</td>
                        <td>${order.username}</td>
                        <td>${order.email}</td>
                        <td>${order.totalAmount.toLocaleString('vi-VN')} ‚Ç´</td>
                        <td>${order.status}</td>
                        <td>
                            <button class="btn btn-sm btn-warning" onclick="editOrder('${order._id}')">S·ª≠a</button>
                            <button class="btn btn-sm btn-danger" onclick="deleteOrder('${order._id}')">X√≥a</button>
                        </td>
                    `;
                            orderTableBody.appendChild(row);
                        });
                    })
                    .catch(err => console.error('L·ªói khi t·∫£i danh s√°ch ƒë∆°n h√†ng:', err));
            }
        };

        // S·ª≠a ƒë∆°n h√†ng
        function editOrder(orderId) {
                // Hi·ªÉn th·ªã modal
                const modal = document.getElementById("editOrderModal");
                modal.style.display = "block";

                // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin ƒë∆°n h√†ng c·∫ßn s·ª≠a
                fetch(`/admin/orders/${orderId}`)
                    .then(res => {
                        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ l·∫•y th√¥ng tin ƒë∆°n h√†ng.");
                        return res.json();
                    })
                    .then(order => {
                        // ƒêi·ªÅn d·ªØ li·ªáu ƒë∆°n h√†ng v√†o modal
                        document.getElementById("editOrderName").value = order.name;
                        document.getElementById("editOrderEmail").value = order.email;
                        document.getElementById("editOrderStatus").value = order.status;
                        document.getElementById("editOrderTotalAmount").value = order.totalAmount;

                        // L∆∞u orderId v√†o modal ƒë·ªÉ g·ª≠i khi s·ª≠a
                        document.getElementById("editOrderForm").dataset.orderId = orderId;
                    })
                    .catch(err => console.error("L·ªói khi l·∫•y th√¥ng tin ƒë∆°n h√†ng:", err));
            }

            // L∆∞u th√¥ng tin ƒë∆°n h√†ng ƒë√£ ch·ªânh s·ª≠a
            function saveEditedOrder() {
                const form = document.getElementById("editOrderForm");
                const orderId = form.dataset.orderId;

                const updatedOrder = {
                    name: document.getElementById("editOrderName").value,
                    email: document.getElementById("editOrderEmail").value,
                    status: document.getElementById("editOrderStatus").value,
                    totalAmount: document.getElementById("editOrderTotalAmount").value
                };

                // G·ª≠i th√¥ng tin ƒë√£ ch·ªânh s·ª≠a l√™n server
                fetch(`/admin/orders/${orderId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(updatedOrder)
                })
                    .then(res => {
                        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin ƒë∆°n h√†ng.");
                        return res.json();
                    })
                    .then(() => {
                        alert("Th√¥ng tin ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.");
                        closeEditOrderModal();
                        loadOrders(); // L√†m m·ªõi danh s√°ch ƒë∆°n h√†ng
                    })
                    .catch(err => console.error("L·ªói khi c·∫≠p nh·∫≠t ƒë∆°n h√†ng:", err));
            }

            // X√≥a ƒë∆°n h√†ng
            function deleteOrder(orderId) {
                if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ƒë∆°n h√†ng n√†y kh√¥ng?')) return;

                fetch(`/admin/orders/${orderId}`, { method: 'DELETE' })
                    .then(res => {
                        if (!res.ok) throw new Error('L·ªói khi x√≥a ƒë∆°n h√†ng.');
                        return res.json();
                    })
                    .then(() => {
                        alert('ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x√≥a.');
                        loadOrders(); // C·∫≠p nh·∫≠t l·∫°i danh s√°ch
                    })
                    .catch(err => console.error(err));
            }


        // ƒê√≥ng Modal Khi B·∫•m N√∫t "X"
        closeButtons.forEach(button => {
            button.onclick = function () {
                addModal.style.display = "none";
                editModal.style.display = "none";
                commentModal.style.display = "none";
                editUserModal.style.display = "none";
                addUserModal.style.display = "none";
                editOrderModal.style.display = "none";
            };
        });

        // ƒê√≥ng Modal Khi Nh·∫•p Ra Ngo√†i Modal
        window.onclick = function (event) {
            if (event.target === addModal) addModal.style.display = "none";
            if (event.target === editModal) editModal.style.display = "none";
            if (event.target === commentModal) commentModal.style.display = "none";
            if (event.target === editUserModal) editUserModal.style.display = "none";
            if (event.target === addUserModal) addUserModal.style.display = "none";
            if (event.target === editOrderModal) editOrderModal.style.display = "none";
        };



    </script>
</body>

</html>